{"version":3,"sources":["redux/reducer.ts","redux/store.ts","components/List/index.ts","components/List/List.tsx","redux/actions.ts","components/Pokemon/Pokemon.tsx","components/Pokemon/index.ts","components/FloatingPokemon/index.ts","components/FloatingPokemon/FloatingPokemon.tsx","App.tsx","index.tsx"],"names":["INITIAL_STATE","pokemon","store","createStore","state","action","type","payload","List","useState","list","setList","newItem","setNewItem","className","onSubmit","e","preventDefault","trim","includes","placeholder","value","onChange","target","map","item","disabled","onClick","currentItem","filter","listItem","setPokeName","Pokemon","dispatch","useDispatch","pokemonName","setPokemonName","pokemonAbilities","setPokemonAbilities","error","setError","handleFetch","a","fetch","toLocaleLowerCase","result","json","pokeAbilities","abilities","title","ability","name","href","url","rel","FloatingPokemon","setPokemon","useSelector","useEffect","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9472e941.chunk.js","sourcesContent":["const INITIAL_STATE = {\r\n  pokemon: \"Nenhum pokemon selecionado\",\r\n};\r\n\r\ntype ActionType = {\r\n  type: string;\r\n  payload: string;\r\n};\r\n\r\nexport const reducer = (state = INITIAL_STATE, action: ActionType) => {\r\n  switch (action.type) {\r\n    case \"SET_POKEMON_NAME\":\r\n      return { ...state, pokemon: action.payload };\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { reducer } from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import List from \"./List\";\r\n\r\nexport default List;\r\n","import { useState, FormEvent } from \"react\";\r\nimport \"./List.css\";\r\n\r\nconst List = () => {\r\n  const [list, setList] = useState<string[]>([\"React\"]);\r\n  const [newItem, setNewItem] = useState(\"\");\r\n\r\n  function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n\r\n    if (newItem.trim() === \"\" || list.includes(newItem)) return;\r\n\r\n    setList([...list, newItem]);\r\n    setNewItem(\"\");\r\n  }\r\n\r\n  function handleDeleteItem(currentItem: string) {\r\n    setList(list.filter((listItem) => listItem !== currentItem));\r\n  }\r\n\r\n  return (\r\n    <div className=\"list-container\">\r\n      <h1>ðŸ’¦ Lista de AnotaÃ§Ãµes</h1>\r\n\r\n      <form\r\n        className=\"list-form\"\r\n        data-testid=\"form-add-item\"\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          data-testid=\"input-add-item\"\r\n          placeholder=\"Escreva um item aqui...\"\r\n          type=\"text\"\r\n          value={newItem}\r\n          onChange={(e) => setNewItem(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"blue-button\">\r\n          Adicionar\r\n        </button>\r\n      </form>\r\n\r\n      <ul className=\"list-of-items\" data-testid=\"ul-items\">\r\n        {list.map((item) => (\r\n          <li\r\n            data-testid={item}\r\n            key={item}\r\n            className={item === \"React\" ? \"disabled\" : \"\"}\r\n          >\r\n            {item}\r\n            <button\r\n              disabled={item === \"React\"}\r\n              data-testid={`${item}-btn-delete`}\r\n              type=\"button\"\r\n              onClick={() => handleDeleteItem(item)}\r\n            >\r\n              Remover\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","export const setPokeName = (pokemon: string) => {\r\n  return {\r\n    type: \"SET_POKEMON_NAME\",\r\n    payload: pokemon,\r\n  };\r\n};\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setPokeName } from \"../../redux/actions\";\r\nimport \"./Pokemon.css\";\r\n\r\nconst pokeAPIUrl = \"https://pokeapi.co/api/v2\";\r\n\r\ntype Ability = {\r\n  ability: {\r\n    name: string;\r\n    url: string;\r\n  };\r\n};\r\n\r\nconst Pokemon = () => {\r\n  const dispatch = useDispatch();\r\n  const [pokemonName, setPokemonName] = useState(\"\");\r\n  const [pokemonAbilities, setPokemonAbilities] = useState<Ability[]>([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFetch = async () => {\r\n    try {\r\n      const result = await fetch(\r\n        `${pokeAPIUrl}/pokemon/${pokemonName.toLocaleLowerCase()}`\r\n      );\r\n      const pokeAbilities = await result.json();\r\n      setPokemonAbilities(pokeAbilities.abilities);\r\n      setError(\"\");\r\n      dispatch(setPokeName(pokemonName));\r\n      setPokemonName(\"\");\r\n    } catch (error: any) {\r\n      setPokemonAbilities([]);\r\n      setError(\"Pokemon nÃ£o encontrado\");\r\n      dispatch(setPokeName(\"Nenhum pokemon selecionado\"));\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPokemonName(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pokemon-container\">\r\n      <h1>âœ¨ Buscador de Habilidades do Pokemon</h1>\r\n      <div className=\"list-form\">\r\n        <input\r\n          value={pokemonName}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          data-testid=\"pokemon-input\"\r\n          placeholder=\"Digite o nome do pokemon aqui...\"\r\n          title=\"Tente 'pikachu'\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          disabled={pokemonName.trim() === \"\"}\r\n          className=\"blue-button\"\r\n          data-testid=\"pokemon-button\"\r\n          onClick={handleFetch}\r\n        >\r\n          Atualizar\r\n        </button>\r\n      </div>\r\n      <span>{error}</span>\r\n      <ul>\r\n        {pokemonAbilities.map((ability) => (\r\n          <li key={ability.ability.name}>\r\n            {ability.ability.name}\r\n            <a href={ability.ability.url} target=\"_blank\" rel=\"noreferrer\">\r\n              Saiba mais â–¶\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import Pokemon from \"./Pokemon\";\r\n\r\nexport default Pokemon;\r\n","import FloatingPokemon from \"./FloatingPokemon\";\r\n\r\nexport default FloatingPokemon;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./FloatingPokemon.css\";\r\n\r\ntype RootState = {\r\n  pokemon: string;\r\n};\r\n\r\nconst FloatingPokemon = () => {\r\n  const [pokemon, setPokemon] = useState(\"\");\r\n\r\n  const pokemonName = useSelector((state: RootState) => state.pokemon);\r\n\r\n  useEffect(() => {\r\n    setPokemon(pokemonName);\r\n  }, [pokemonName]);\r\n\r\n  return <div className=\"floating-pokemon\">{pokemon}</div>;\r\n};\r\n\r\nexport default FloatingPokemon;\r\n","import { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./App.css\";\n\nimport List from \"./components/List\";\nimport Pokemon from \"./components/Pokemon\";\nimport FloatingPokemon from \"./components/FloatingPokemon\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"container\">\n        <Pokemon />\n        <List />\n        <FloatingPokemon />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}